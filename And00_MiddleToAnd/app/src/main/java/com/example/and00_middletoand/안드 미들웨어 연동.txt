흐름이해가 중요! 코드외울필요없음!
1. manifast.xml 에 내용 추가
 1-1. 인터넷 권한 설정    <uses-permission android:name="android.permission.INTERNET"/>
 1-2. http 프로토콜을 사용 <application
                            android:usesCleartextTraffic="true"
        Andriod에서는 보안상의 이유로 http요청을 막아둠 . https만 기본적으로 사용이 가능
        -http(www)에서 정보를 주고 받기 위한 표준 (암호화x)
        -https (보안버전 , SSL , TLS 암호화 표준 )

2. 라이브러리 추가 (Gradle Script / build.gradle(Module : app)
 2.1 *Retrofit* : HttpClient(요청) 처리를 쉽게 가능하게 함. (Volley , OkHttp...)
 2.2 Retrofit + 스칼라 컨버터 : 데이터를 단일 String으로 양쪽이 표준을 맞춤. (받을때)
 2.3 Gson : 어떤 객체 , 데이터를 전부 Json 으로 쉽게 바꾸게 해줌 (Json -> 객체, 데이터)
    =================실제 추가 (Gradle.Module)===============
        // Retrofit Core : Http요청을 쉽게하기 위한 library
        implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
        // 단일행 데이터를 받기 위한 컨버터 : 컨버터 종류중 사용법이 제일 단순함.
        implementation group: 'com.squareup.retrofit2', name: 'converter-scalars', version: '2.9.0'
        // String Json 을 객체로 변환 또는 객체를 String Json으로 변환
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
        ================================================================

3. ApiInterface 생성 및 설정
        Call<String> getData(@Url String url , @FieldMap HashMap<String , Object> params);

4. Retrofit 객체 설정
public class ApiClient {
    public static Retrofit getApiClient(){

        Retrofit retrofit = new Retrofit.Builder()  //Retrofit.Builer 로 초기화 시켜야함 (Retrofit)
        .baseUrl("http://192.168.0.49/mid/") //내 톰캣에서 프로젝트까지 (index.html 또는 주소가 base)
                .addConverterFactory(ScalarsConverterFactory.create()) //String json 사용이 가능해짐
                .build();
        return retrofit;


5. 사용하기
 ApiInterface apiInterface = ApiClient.getApiClient().create(ApiInterface.class);

        MiddleVO vo = new MiddleVO();
        vo.setDoubleF(3.14);
        vo.setStr("스트링");
        vo.setIntF(13);
        //위 것도 가능하지만 너무 비효율적

        String jsonData =  new Gson().toJson(vo);
        //Json으로 보낸다면?

        HashMap<String, Object> params = new HashMap<>();
        params.put("andParam" , "jkh");
        params.put("andParam2" , vo.getStr());
        params.put("andParam3" , vo.getDoubleF());
        params.put("andParam4" , vo.getIntF());
        params.put("jsonData", jsonData);

        //excute쓰면 어플꺼짐 비동기처리안해서 ㅠ
        apiInterface.getData("asd.and" , params).enqueue(new Callback<String>() {
            @Override
            public void onResponse(Call<String> call, Response<String> response) {
                //응답이 있음
                Log.d("레트로핏", "onResponse: "+response.body());
                Log.d("레트로핏", "onResponse: "+response.errorBody()); //<-잘안씀
            }

            @Override
            public void onFailure(Call<String> call, Throwable t) {
                //서버 꺼짐 등의 이유로 실패 ,응답없을떄는 10초동안 기다림
                Log.d("레트로핏", "onFailure: " + t.getMessage());
                Log.d("레트로핏", "onFailure: " + t.toString());
            }
        });


 6. Gson
    객체를 String Json으로 바꾸기 . new Gson().toJson(객체); <- 안드에서 보낼때!
    String Json을 객체로 바꾸기   . new Gson().fromJson(String Json , 객체타입.class); <- 이클립스(controller 에서 받을떄